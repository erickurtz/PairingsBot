#!/usr/bin/python3

# Will use curses for the GUI

import curses
import launch_scr
import traceback

def initialize():
    scr = curses.initscr()
    try:
        
        #If yes is 1, escape sequences generated by some keys (keypad, function keys) will be interpreted by curses. If yes is 0, escape sequences will be left as is in the input stream.
        scr.keypad(1)
       
        #Control what happens when the cursor of a window is moved off the edge of the window or scrolling region, either as a result of a newline action on the bottom line, or typing the last character of the last line. If flag is false, the cursor is left on the bottom line. If flag is true, the window is scrolled up one line. Note that in order to get the physical scrolling effect on the terminal, it is also necessary to call idlok().
        scr.scrollok(1)
        
        #Set blocking or non-blocking read behavior for the window. If delay is negative, blocking read is used (which will wait indefinitely for input). If delay is zero, then non-blocking read is used, and -1 will be returned by getch() if no input is waiting. If delay is positive, then getch() will block for delay milliseconds, and return -1 if there is still no input at the end of that time.
        scr.timeout(-1)

        # Turn off line buffering and interpret characters as they are ready.
        # This is for directional keys
        curses.cbreak()

        launch_scr.initialize(scr)

    except Exception as ex:
        curses.endwin()
        traceback.print_exc()
    finally:
        scr.erase()
        curses.nocbreak()
        scr.keypad(0)
        curses.echo()
        curses.endwin()

initialize()
